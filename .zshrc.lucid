# work aliases
alias lsf='lucid-start fast'
alias lsfe='lucid-start sh --frontend'
alias lsbe='lucid-start sh --s3_assets'
alias lss='lucid-start sh -D --no-watch'
alias lbb='lucid-bazel build'
alias lbf='lucid-bazel format'
#alias lbff='lucid-bazel format fast --diff'
alias lbff='lucid-bazel format --diff'
#lbfd() {lucid-bazel format fast --diff --since=$1}
lbfd() {lucid-bazel format --diff --since=$1}
alias lbbf='shed affected-targets build'
lbbd() {shed affected-targets build --since=$1}
alias lbr='lucid-bazel run'
alias lbt='lucid-bazel test'
alias lbq='lucid-bazel query'
alias scalats='shed generate-scalats'
alias compat='bazel build $(bazel query "filter(compat_test, //src/jvm/...)") --keep_going || tools/bazel-fix-deps.py'
lbbd() {bazel build $(bazel query "same_pkg_direct_rdeps(set($(git diff --name-only $1)))")}
alias tb='shed trigger-build'
alias gpab='g psf;tb'
alias lblc='export BAZEL_CACHE=none'
alias lbrc='unset BAZEL_CACHE'
alias lde='python3 ~/lucid/main/cake/app/lucidchart-tools/document-state-extractor/extract-document-state.py'
alias check='git check && git fetch origin master master-built master-stable && echo "Git fetched from upstream." && git check'
alias state='shed bitbucket master-branches'
alias prs='shed bitbucket list-recent-prs'
alias gcalf='git commit --amend --author="Lucid Format <ops@lucidchart.com>"'
alias ldt='~/lucid/main/scripts/list-deploy-targets.sh'
alias lir='lucid-is-released -e production'
lbv() { lucido version --commit=$1 bazel:cake-build:cake-bazel:tgz }
alias lll='~/lucid/l3/l3.sh'
alias lco='lll checkout'
alias cpr='shed bitbucket create-pr-link'
alias gpr='shed bitbucket get-pr-link'
alias mpr='shed bitbucket merge-when-ready'
alias csd='shed bitbucket create-pr-link --target $(git log --pretty=format:%D | grep -m1 "^origin/" | cut -d, -f1 | sed "s/^origin\///")'

gif() {~/.tools/webm2gif.sh $1}

# Usage: set-main ~/lucid/main
set-main() {
    sudo rm -f /var/lucid/main && sudo ln -s "$(readlink -f ${1})" /var/lucid/main
};

# work-specfic config

export BAZEL_COMPLETION_USE_QUERY=true

NOW=$(date +%s)
LAST_RUN=$(sudo cat /var/cache/chef/lastrun)
if (( LAST_RUN + 120*60 < NOW )); then
    echo "WARNING: Chef not run for more than 120 minutes."
fi

cd ~/lucid/main/
